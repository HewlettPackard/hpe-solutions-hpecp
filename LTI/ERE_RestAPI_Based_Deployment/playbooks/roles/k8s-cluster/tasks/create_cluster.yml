###
## Copyright (2021) Hewlett Packard Enterprise Development LP
##
## Licensed under the Apache License, Version 2.0 (the "License");
## You may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
## http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
####
---
  - name: Get session token to connect controller
    uri:
      url: http://{{ controller.host_ip }}:8080/api/v1/login
      return_content: yes
      validate_certs: false
      headers:
        Content-Type: "application/json"
        Accept-Charset: "UTF-8"
      method: POST
      body_format: json
      body:
        name: "{{ controller_creds.name }}"
        password: "{{ controller_creds.password }}"
      status_code:
        - 201
    register: login_response

  - name: Fetch location header
    set_fact:
      session_token="{{ login_response.location }}"

  - name: Fetch token
    set_fact:
      token: "/{{session_token.split('/')[3]}}/{{session_token.split('/')[4]}}/{{session_token.split('/')[5]}}/{{session_token.split('/')[6]}}"

  - debug:
      msg="{{ token }}"

  - name: create k8s cluster
    uri:
      url: http://{{ controller.host_ip }}:8080/api/v2/k8scluster
      return_content: yes
      validate_certs: false
      headers:
        X-BDS-SESSION: "{{ token }}"
        Content-Type: "application/json"
        Accept-Charset: "UTF-8"
      method: POST
      body_format: json
      body: "{{ lookup('file','/tmp/payload_k8scluster.json') }}"
      status_code:
        - 201
    register: output

  - debug:
      msg: "{{ output }}"

  - name: Fetch k8s cluster status 
    uri:
      url: http://{{ controller.host_ip }}:8080/api/v2/k8scluster
      return_content: yes
      validate_certs: false
      headers:
        X-BDS-SESSION: "{{ token }}"
        Content-Type: "application/json"
        Accept-Charset: "UTF-8"
      method: GET
      status_code:
        - 200
    register: k8scluster_info

  - debug: 
      msg: "{{ k8scluster_info }}"

  - name: save the Json data to a Variable as a Fact
    set_fact:
      k8scluster_content: "{{ k8scluster_info.content }}"

  - name: Set the k8s_cluster status info
    set_fact:
      k8s_cluster_status: "{{ item.status }}"    # here item refers to json response array
    with_items: "{{ k8scluster_content._embedded.k8sclusters }}"
  
  - debug: 
      msg: "k8s cluster failed"
    failed_when: k8s_cluster_status == "error"
    when: k8s_cluster_status != "ready"
    
  - debug:
      msg: "k8s cluster successfully created"
    when: k8s_cluster_status == "ready"

  - debug:
      msg: "k8s cluster is getting created"
    when: k8s_cluster_status == "creating"
  
  - name: Sleep for 5400 seconds and continue with play
    ansible.builtin.wait_for:
      timeout: 5400

  - name: Fetch k8s cluster status 
    uri:
      url: http://{{ controller.host_ip }}:8080/api/v2/k8scluster
      return_content: yes
      validate_certs: false
      headers:
        X-BDS-SESSION: "{{ token }}"
        Content-Type: "application/json"
        Accept-Charset: "UTF-8"
      method: GET
      status_code:
        - 200
    register: k8scluster_info_creating
  
  - name: save the Json data to a Variable as a Fact
    set_fact:
      k8scluster_content_info: "{{ k8scluster_info_creating.content }}"

  - name: Set the k8s_cluster status info
    set_fact:
      k8s_cluster_status_new: "{{ item.status }}"    # here item refers to json response array
    with_items: "{{ k8scluster_content_info._embedded.k8sclusters }}"
  
  - debug:
      msg: "{{ k8s_cluster_status_new }}"
    
  - debug: 
      msg: "k8s cluster failed\still creating check dashboard"
    failed_when: k8s_cluster_status_new == "error"
    when: k8s_cluster_status_new != "ready"

  - debug:
      msg: "k8s cluster successfully created"
    when: k8s_cluster_status_new == "ready"
  
