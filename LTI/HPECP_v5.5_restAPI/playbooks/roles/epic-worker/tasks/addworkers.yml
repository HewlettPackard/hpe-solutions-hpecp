###
## Copyright (2021) Hewlett Packard Enterprise Development LP
##
## Licensed under the Apache License, Version 2.0 (the "License");
## You may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
## http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
####
---
  - name: Set the epic worker ip variable
    set_fact:
      worker_ip: "{{ item.worker }}"

  - name: Set the epic worker node disk variable
    set_fact:
      worker_node_disk: "{{ epicworkers.node_disks }}"

  - name: Get session token for connecting to controller
    uri:
      url: http://{{ controller.host_ip }}:8080/api/v1/login
      return_content: yes
      validate_certs: false
      headers:
        Content-Type: "application/json"
        Accept-Charset: "UTF-8"
      method: POST
      body_format: json
      body:
        name: "{{ controller_creds.name }}"
        password: "{{ controller_creds.password }}"
      status_code:
        - 201
    register: token

  - name: Fetch location header
    set_fact:
      session_token="{{ token.location }}"

  - name: Fetch token
    set_fact:
      token: "/{{session_token.split('/')[3]}}/{{session_token.split('/')[4]}}/{{session_token.split('/')[5]}}/{{session_token.split('/')[6]}}"

  - debug:
      msg="{{ token }}"

  - name: Load add worker payload json file
    include_vars:
      file: /tmp/payload_add_epic.json
      name: add_epic

  - name: Update ip in json file
    set_fact:
      add_epic: "{{ add_epic | default({}) | combine({ 'ip': worker_ip }) }}"

  - name: Write add-epic file back to disk.
    copy:
      content: "{{ add_epic | to_nice_json }}"
      dest: /tmp/payload_add_epic.json

  - name: Add epic-worker nodes
    uri:
      url: http://{{ controller.host_ip }}:8080/api/v1/workers
      return_content: yes
      validate_certs: false
      headers:
        X-BDS-SESSION: "{{ token }}"
        Accept-Charset: "UTF-8"
      method: POST
      body_format: json
      body: "{{ lookup('file','/tmp/payload_add_epic.json') }}"
      status_code:
        - 201
    register: res

  - debug:
      var: "{{ res }}"

  - name: Sleep for 250 seconds and continue with play
    ansible.builtin.wait_for:
      timeout: 250

  - name: Fetch epic-worker id location
    set_fact:
      id_location="{{ res.location }}"
  
  - name: Fetch epic-worker id
    set_fact:
      id: "/{{id_location.split('/')[3]}}/{{id_location.split('/')[4]}}/{{id_location.split('/')[5]}}/{{id_location.split('/')[6]}}"

  - debug:
      msg="{{ id }}"

  - name: Load configure worker payload json file
    include_vars:
      file: /tmp/payload_configure_epic.json
      name: configure_epic

  - name: Update id in json file
    set_fact:
      configure_epic: "{{ configure_epic | default({}) | combine({ 'id': id }) }}"
  
  - name: Update name in json file
    set_fact:
      configure_epic: "{{ configure_epic | default({}) | combine({ 'name': worker_ip }) }}"

  - name: Update containerdisks in json file
    set_fact:
      configure_epic: "{{ configure_epic | default({}) | combine({ 'containerdisks': worker_node_disk ]}) }}"

  - name: Write add-epic file back to disk.
    copy:
      content: "{{ configure_epic | to_nice_json }}"
      dest: /tmp/payload_configure_epic.json

  - name: Configure epic-workers storage
    uri:
      url: http://{{ controller.host_ip }}:8080/api/v1/install/?install_alter
      return_content: yes
      validate_certs: false
      headers:
        X-BDS-SESSION: "{{ token }}"
        Accept-Charset: "UTF-8"
        Content-Type: "application/json"
      method: PUT
      body_format: json
      body: "{{ lookup('file','/tmp/payload_configure_epic.json') }}"
      status_code:
        - 204
    register: response

  - debug:
      msg: "{{ response }}"

  - name: Sleep for 400 seconds and continue with play
    ansible.builtin.wait_for:
      timeout: 400
