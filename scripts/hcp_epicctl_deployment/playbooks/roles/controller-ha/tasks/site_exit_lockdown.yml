###
## Copyright (2020) Hewlett Packard Enterprise Development LP
##
## Licensed under the Apache License, Version 2.0 (the "License");
## You may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
## http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
####
---

  - name: Prepare input file for epicctl to create controller ha.
    template:
      src: site-exit-lockdown.j2
      dest: /tmp/site-exit-lockdown.json
      mode: 0640

  - name: Get Site Lockdown Response
    command: epicctl api get -u "/api/v1/lock" -n {{ common.name }} -p {{ common.platform }} --jsonpath "._embedded.external_locks"  -o /tmp/get-lockresp.json
    register: res
    failed_when: res.rc != 0

  - name: Check if response file exists.
    stat:
      path: /tmp/get-lockresp.json
    register: output

  - set_fact:
      jsondata: "{{ (lookup('file', '/tmp/get-lockresp.json') | from_json)}}"
    when: output.stat.exists == True

  - set_fact:
      exit_url_lock: "{{ item._links.self.href }}"    # here item refers to json response array
    with_items: "{{ jsondata }}"

  - name: Exit Site Lockdown
    command: epicctl api delete -a -u {{ exit_url_lock }} -f /tmp/site-exit-lockdown.json -p  {{ common.platform }} -n {{ common.name }}
    register: res
    failed_when: res.rc != 0

